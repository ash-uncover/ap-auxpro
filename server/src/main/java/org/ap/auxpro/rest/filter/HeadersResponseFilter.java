package org.ap.auxpro.rest.filter;

import java.io.IOException;
import java.util.List;

import javax.ws.rs.container.ContainerRequestContext;
import javax.ws.rs.container.ContainerResponseContext;
import javax.ws.rs.container.ContainerResponseFilter;

import org.ap.auxpro.internal.EConfigProperties;

/* This class was auto-generated by the JavaWriter */
public class HeadersResponseFilter implements ContainerResponseFilter {

	public static final String ACCESS_CONTROL_ALLOW_ORIGIN = "Access-Control-Allow-Origin";
	public static final String ACCESS_CONTROL_ALLOW_HEADERS = "Access-Control-Allow-Headers";
	public static final String ACCESS_CONTROL_ALLOW_METHODS = "Access-Control-Allow-Methods";
	public static final String ACCESS_CONTROL_EXPOSE_HEADERS = "Access-Control-Expose-Headers";
	
	public HeadersResponseFilter() {
	}

	@Override
	public void filter(ContainerRequestContext requestContext, ContainerResponseContext responseContext) throws IOException {
		responseContext.getHeaders().add(ACCESS_CONTROL_ALLOW_ORIGIN, EConfigProperties.SERV_ORIGIN.getValue());
		responseContext.getHeaders().add(ACCESS_CONTROL_ALLOW_METHODS, "GET, POST, PUT, DELETE, OPTIONS");
		responseContext.getHeaders().add(ACCESS_CONTROL_ALLOW_HEADERS, "content-type,authorization");
		responseContext.getHeaders().add(ACCESS_CONTROL_EXPOSE_HEADERS, "*");
	}
	
	public void printHeaders(ContainerResponseContext responseContext) {
		for (String key: responseContext.getHeaders().keySet()) {
			this.printHeader(key, responseContext.getHeaders().get(key));
		}
	}
	public void printHeader(String name, List<Object> values) {
		System.out.println("Header: " + name);
		for (Object value: values) {
			System.out.println("  - " + value);
		}
		
	}

}
