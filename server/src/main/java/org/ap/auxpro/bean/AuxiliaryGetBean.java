package org.ap.auxpro.bean;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import java.util.List;
import org.ap.auxpro.storage.auxiliary.AuxiliaryData;
import org.ap.common.time.TimeHelper;
import org.ap.auxpro.storage.apauth.ApauthData;
import org.ap.common.exception.APWebException;
import org.ap.common.exception.APWebError;
import java.util.ArrayList;
import javax.ws.rs.core.Response.Status;
import org.ap.auxpro.storage.auxiliary.AuxiliaryFields;

/* This class was auto-generated by the JavaWriter */
@JsonIgnoreProperties(ignoreUnknown=true)
public class AuxiliaryGetBean {

	public String country;
	public String lastName;
	public String civility;
	public String city;
	public List<Integer> lastUpdateDate;
	public String postalCode;
	public Boolean isTutoSkipped;
	public String description;
	public String socialNumber;
	public List<Integer> accountExpiryDate;
	public Integer profilProgression;
	public Integer skillShopping;
	public Boolean notifyOffersSms;
	public Boolean notifyAuxpros;
	public String birthCountry;
	public Boolean profilCompleted;
	public Integer skillDoityourself;
	public List<String> diploma;
	public String id;
	public String email;
	public Double longitude;
	public Integer skillNursing;
	public String address;
	public Double lattitude;
	public String accountType;
	public Boolean notifyPartners;
	public String birthCity;
	public String avatar;
	public Boolean areSkillSet;
	public List<Integer> creationDate;
	public List<Integer> birthDate;
	public Integer skillChildhood;
	public Integer skillCompagny;
	public String firstName;
	public List<Integer> skillAnswers;
	public String nationality;
	public String isEntrepreneur;
	public String phone;
	public Integer skillAdministrative;
	public Integer skillHousework;
	public Boolean notifyOffersMail;

	public AuxiliaryGetBean() {
	}

	public AuxiliaryGetBean(AuxiliaryData data, ApauthData dataAuth) {
		country = data.getCountry();
		lastName = data.getLastName();
		civility = data.getCivility();
		city = data.getCity();
		lastUpdateDate = TimeHelper.toIntegers(data.getLastUpdateDate());
		postalCode = data.getPostalCode();
		isTutoSkipped = data.getIsTutoSkipped();
		description = data.getDescription();
		socialNumber = data.getSocialNumber();
		accountExpiryDate = TimeHelper.toIntegers(data.getAccountExpiryDate());
		profilProgression = data.getProfilProgression();
		skillShopping = data.getSkillShopping();
		notifyOffersSms = data.getNotifyOffersSms();
		notifyAuxpros = data.getNotifyAuxpros();
		birthCountry = data.getBirthCountry();
		profilCompleted = data.getProfilCompleted();
		skillDoityourself = data.getSkillDoityourself();
		diploma = data.getDiploma();
		id = data.getId();
		email = dataAuth.getEmail();
		longitude = data.getLongitude();
		skillNursing = data.getSkillNursing();
		address = data.getAddress();
		lattitude = data.getLattitude();
		accountType = data.getAccountType();
		notifyPartners = data.getNotifyPartners();
		birthCity = data.getBirthCity();
		avatar = data.getAvatar();
		areSkillSet = data.getAreSkillSet();
		creationDate = TimeHelper.toIntegers(data.getCreationDate());
		birthDate = TimeHelper.toIntegers(data.getBirthDate());
		skillChildhood = data.getSkillChildhood();
		skillCompagny = data.getSkillCompagny();
		firstName = data.getFirstName();
		skillAnswers = data.getSkillAnswers();
		nationality = data.getNationality();
		isEntrepreneur = data.getIsEntrepreneur();
		phone = data.getPhone();
		skillAdministrative = data.getSkillAdministrative();
		skillHousework = data.getSkillHousework();
		notifyOffersMail = data.getNotifyOffersMail();
	}

	public AuxiliaryData toData() {
		AuxiliaryData data = new AuxiliaryData();
		fillData(data);
		return data;
	}

	public void fillData(AuxiliaryData data) {
		data.setCountry(country);
		data.setLastName(lastName);
		data.setCivility(civility);
		data.setCity(city);
		data.setPostalCode(postalCode);
		data.setIsTutoSkipped(isTutoSkipped);
		data.setDescription(description);
		data.setSocialNumber(socialNumber);
		data.setAccountExpiryDate(TimeHelper.toDate(accountExpiryDate));
		data.setProfilProgression(profilProgression);
		data.setSkillShopping(skillShopping);
		data.setNotifyOffersSms(notifyOffersSms);
		data.setNotifyAuxpros(notifyAuxpros);
		data.setBirthCountry(birthCountry);
		data.setProfilCompleted(profilCompleted);
		data.setSkillDoityourself(skillDoityourself);
		data.setDiploma(diploma);
		data.setLongitude(longitude);
		data.setSkillNursing(skillNursing);
		data.setAddress(address);
		data.setLattitude(lattitude);
		data.setAccountType(accountType);
		data.setNotifyPartners(notifyPartners);
		data.setBirthCity(birthCity);
		data.setAvatar(avatar);
		data.setAreSkillSet(areSkillSet);
		data.setBirthDate(TimeHelper.toDate(birthDate));
		data.setSkillChildhood(skillChildhood);
		data.setSkillCompagny(skillCompagny);
		data.setFirstName(firstName);
		data.setSkillAnswers(skillAnswers);
		data.setNationality(nationality);
		data.setIsEntrepreneur(isEntrepreneur);
		data.setPhone(phone);
		data.setSkillAdministrative(skillAdministrative);
		data.setSkillHousework(skillHousework);
		data.setNotifyOffersMail(notifyOffersMail);
	}

	public void check() throws APWebException {
		List<APWebError> errors = new ArrayList<APWebError>();
		if (AuxiliaryFields.COUNTRY.getValidator().getState(country)) {
			errors.add(new APWebError("AP_AUXILIARY_INVALID_FIELDS", "Invalid field 'country'"));
		}
		if (AuxiliaryFields.LAST_NAME.getValidator().getState(lastName)) {
			errors.add(new APWebError("AP_AUXILIARY_INVALID_FIELDS", "Invalid field 'lastName'"));
		}
		if (AuxiliaryFields.CIVILITY.getValidator().getState(civility)) {
			errors.add(new APWebError("AP_AUXILIARY_INVALID_FIELDS", "Invalid field 'civility'"));
		}
		if (AuxiliaryFields.CITY.getValidator().getState(city)) {
			errors.add(new APWebError("AP_AUXILIARY_INVALID_FIELDS", "Invalid field 'city'"));
		}
		if (AuxiliaryFields.POSTAL_CODE.getValidator().getState(postalCode)) {
			errors.add(new APWebError("AP_AUXILIARY_INVALID_FIELDS", "Invalid field 'postalCode'"));
		}
		if (AuxiliaryFields.DESCRIPTION.getValidator().getState(description)) {
			errors.add(new APWebError("AP_AUXILIARY_INVALID_FIELDS", "Invalid field 'description'"));
		}
		if (AuxiliaryFields.SOCIAL_NUMBER.getValidator().getState(socialNumber)) {
			errors.add(new APWebError("AP_AUXILIARY_INVALID_FIELDS", "Invalid field 'socialNumber'"));
		}
		if (AuxiliaryFields.BIRTH_COUNTRY.getValidator().getState(birthCountry)) {
			errors.add(new APWebError("AP_AUXILIARY_INVALID_FIELDS", "Invalid field 'birthCountry'"));
		}
		if (AuxiliaryFields.DIPLOMA.getValidator().getState(diploma)) {
			errors.add(new APWebError("AP_AUXILIARY_INVALID_FIELDS", "Invalid field 'diploma'"));
		}
		if (AuxiliaryFields.ADDRESS.getValidator().getState(address)) {
			errors.add(new APWebError("AP_AUXILIARY_INVALID_FIELDS", "Invalid field 'address'"));
		}
		if (AuxiliaryFields.BIRTH_CITY.getValidator().getState(birthCity)) {
			errors.add(new APWebError("AP_AUXILIARY_INVALID_FIELDS", "Invalid field 'birthCity'"));
		}
		if (AuxiliaryFields.BIRTH_DATE.getValidator().getState(birthDate)) {
			errors.add(new APWebError("AP_AUXILIARY_INVALID_FIELDS", "Invalid field 'birthDate'"));
		}
		if (AuxiliaryFields.FIRST_NAME.getValidator().getState(firstName)) {
			errors.add(new APWebError("AP_AUXILIARY_INVALID_FIELDS", "Invalid field 'firstName'"));
		}
		if (AuxiliaryFields.NATIONALITY.getValidator().getState(nationality)) {
			errors.add(new APWebError("AP_AUXILIARY_INVALID_FIELDS", "Invalid field 'nationality'"));
		}
		if (AuxiliaryFields.IS_ENTREPRENEUR.getValidator().getState(isEntrepreneur)) {
			errors.add(new APWebError("AP_AUXILIARY_INVALID_FIELDS", "Invalid field 'isEntrepreneur'"));
		}
		if (AuxiliaryFields.PHONE.getValidator().getState(phone)) {
			errors.add(new APWebError("AP_AUXILIARY_INVALID_FIELDS", "Invalid field 'phone'"));
		}
		if (errors.size() > 0) {
			throw new APWebException("AP_AUXILIARY_INVALID_FIELDS", "Invalid fields within 'auxiliary'", errors, Status.BAD_REQUEST);
		}
	}
}
