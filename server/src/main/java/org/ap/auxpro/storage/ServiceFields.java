package org.ap.auxpro.storage;

import org.ap.common.validators.EValidators;
import org.ap.common.validators.IValidator;

/* This class was auto-generated by the JavaWriter */
public enum ServiceFields {

	COUNTRY ("country", "String", EValidators.NON_EMPTY_STRING.getValidator()),
	ADDRESS ("address", "String", EValidators.NON_EMPTY_STRING.getValidator()),
	CITY ("city", "String", EValidators.NON_EMPTY_STRING.getValidator()),
	LATTITUDE ("lattitude", "Double", EValidators.DEFAULT.getValidator()),
	LAST_UPDATE_DATE ("lastUpdateDate", "List<Integer>", EValidators.DEFAULT.getValidator()),
	POSTAL_CODE ("postalCode", "String", EValidators.POSTAL_CODE.getValidator()),
	ACCOUNT_TYPE ("accountType", "String", EValidators.DEFAULT.getValidator()),
	IS_TUTO_SKIPPED ("isTutoSkipped", "Boolean", EValidators.DEFAULT.getValidator()),
	NOTIFY_PARTNERS ("notifyPartners", "Boolean", EValidators.DEFAULT.getValidator()),
	AVATAR ("avatar", "String", EValidators.DEFAULT.getValidator()),
	ACCOUNT_EXPIRY_DATE ("accountExpiryDate", "Integer", EValidators.DEFAULT.getValidator()),
	CREATION_DATE ("creationDate", "List<Integer>", EValidators.DEFAULT.getValidator()),
	SIRET ("siret", "String", EValidators.SIRET_NUMBER.getValidator()),
	NOTIFY_AUXPROS ("notifyAuxpros", "Boolean", EValidators.DEFAULT.getValidator()),
	PHONE ("phone", "String", EValidators.PHONE.getValidator()),
	FUNCTION ("function", "String", EValidators.NON_NULL.getValidator()),
	PROFIL_COMPLETED ("profilCompleted", "Boolean", EValidators.DEFAULT.getValidator()),
	ID ("id", "String", EValidators.DEFAULT.getValidator()),
	SOCIAL_REASON ("socialReason", "String", EValidators.NON_EMPTY_STRING.getValidator()),
	LONGITUDE ("longitude", "Double", EValidators.DEFAULT.getValidator()),
	;

	private String _id;
	private String _type;
	private IValidator<?> _validator;

	private  ServiceFields(String id, String type, IValidator<?> validator) {
		_id = id;
		_type = type;
		_validator = validator;
	}

	public String getId() {
		return _id;
	}

	public String getType() {
		return _type;
	}

	public IValidator<?> getValidator() {
		return _validator;
	}

	public static ServiceFields byId(String id) {
		for (ServiceFields value : ServiceFields.values()) {
			if (value.getId().equals(id)) {
				return value;
			}
		}
		return null;
	}

}
