package org.ap.auxpro.storage.customer;

import static com.mongodb.client.model.Filters.*;
import org.bson.Document;
import org.bson.conversions.Bson;
import org.ap.common.mongo.Mongo;
import org.ap.common.web.exception.APWebException;
import java.util.List;
import java.util.ArrayList;
import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.result.DeleteResult;

/* This class was auto-generated by the JavaWriter */
public class CustomerCollection {

	public static MongoCollection<Document> getCollection() throws APWebException {
		return Mongo.get().collection("customer");
	}

	public static CustomerData getById(String id) throws APWebException {
		Document document = getCollection().find(eq("id", id)).first();
		return fromDocument(document);
	}

	public static boolean deleteById(String id) throws APWebException {
		Document document = getCollection().findOneAndDelete(eq("id", id));
		return document != null;
	}

	public static List<CustomerData> getAll() throws APWebException {
		FindIterable<Document> documents = getCollection().find();
		List<CustomerData> result = new ArrayList<CustomerData>();
		for (Document document: documents){
			result.add(fromDocument(document));
		}
		return result;
	}

	public static List<CustomerData> get(Bson condition) throws APWebException {
		FindIterable<Document> documents = getCollection().find(condition);
		List<CustomerData> result = new ArrayList<CustomerData>();
		for (Document document: documents){
			result.add(fromDocument(document));
		}
		return result;
	}

	public static void create(CustomerData data) throws APWebException {
		Document document = toDocument(data);
		getCollection().insertOne(document);
	}

	public static boolean update(CustomerData data) throws APWebException {
		Document document = toDocument(data);
		Document result = getCollection().findOneAndUpdate(eq("id", data.getId()), new Document("$set", document));
		return result != null;
	}

	public static boolean updateNull(CustomerData data) throws APWebException {
		Document document = toNullDocument(data);
		Document result = getCollection().findOneAndUpdate(eq("id", data.getId()), new Document("$set", document));
		return result != null;
	}

	public static boolean delete(CustomerData data) throws APWebException {
		Document result = getCollection().findOneAndDelete(eq("id", data.getId()));
		return result != null;
	}

	public static long deleteMany(Bson condition) throws APWebException {
		DeleteResult result = getCollection().deleteMany(condition);
		return result.getDeletedCount();
	}

	public static long drop() throws APWebException {
		long result = getCollection().count();
		getCollection().drop();
		return result;
	}

	public static CustomerData fromDocument(Document document) {
		if(document == null) {
			return null;
		}
		CustomerData data = new CustomerData();
		data.lastName = document.getString("lastName");
		data.country = document.getString("country");
		data.civility = document.getString("civility");
		data.address = document.getString("address");
		data.skillNursing = document.getInteger("skillNursing");
		data.city = document.getString("city");
		data.lattitude = document.getDouble("lattitude");
		data.lastUpdateDate = document.getDate("lastUpdateDate");
		data.postalCode = document.getString("postalCode");
		data.creationDate = document.getDate("creationDate");
		data.birthDate = document.getDate("birthDate");
		data.skillChildhood = document.getInteger("skillChildhood");
		data.skillCompagny = document.getInteger("skillCompagny");
		data.skillShopping = document.getInteger("skillShopping");
		data.firstName = document.getString("firstName");
		data.nationality = document.getString("nationality");
		data.phone = document.getString("phone");
		data.skillAdministrative = document.getInteger("skillAdministrative");
		data.skillHousework = document.getInteger("skillHousework");
		data.skillDoityourself = document.getInteger("skillDoityourself");
		data.id = document.getString("id");
		data.serviceId = document.getString("serviceId");
		data.email = document.getString("email");
		data.longitude = document.getDouble("longitude");
		return data;
	}

	public static Document toDocument(CustomerData customer) {
		Document document = new Document();
		if (customer.lastName != null)
			document.append("lastName", customer.lastName);
		if (customer.country != null)
			document.append("country", customer.country);
		if (customer.civility != null)
			document.append("civility", customer.civility);
		if (customer.address != null)
			document.append("address", customer.address);
		if (customer.skillNursing != null)
			document.append("skillNursing", customer.skillNursing);
		if (customer.city != null)
			document.append("city", customer.city);
		if (customer.lattitude != null)
			document.append("lattitude", customer.lattitude);
		if (customer.lastUpdateDate != null)
			document.append("lastUpdateDate", customer.lastUpdateDate);
		if (customer.postalCode != null)
			document.append("postalCode", customer.postalCode);
		if (customer.creationDate != null)
			document.append("creationDate", customer.creationDate);
		if (customer.birthDate != null)
			document.append("birthDate", customer.birthDate);
		if (customer.skillChildhood != null)
			document.append("skillChildhood", customer.skillChildhood);
		if (customer.skillCompagny != null)
			document.append("skillCompagny", customer.skillCompagny);
		if (customer.skillShopping != null)
			document.append("skillShopping", customer.skillShopping);
		if (customer.firstName != null)
			document.append("firstName", customer.firstName);
		if (customer.nationality != null)
			document.append("nationality", customer.nationality);
		if (customer.phone != null)
			document.append("phone", customer.phone);
		if (customer.skillAdministrative != null)
			document.append("skillAdministrative", customer.skillAdministrative);
		if (customer.skillHousework != null)
			document.append("skillHousework", customer.skillHousework);
		if (customer.skillDoityourself != null)
			document.append("skillDoityourself", customer.skillDoityourself);
		if (customer.id != null)
			document.append("id", customer.id);
		if (customer.serviceId != null)
			document.append("serviceId", customer.serviceId);
		if (customer.email != null)
			document.append("email", customer.email);
		if (customer.longitude != null)
			document.append("longitude", customer.longitude);
		return document;
	}

	public static Document toNullDocument(CustomerData customer) {
		Document document = new Document();
		document.append("lastName", customer.lastName);
		document.append("country", customer.country);
		document.append("civility", customer.civility);
		document.append("address", customer.address);
		document.append("skillNursing", customer.skillNursing);
		document.append("city", customer.city);
		document.append("lattitude", customer.lattitude);
		document.append("lastUpdateDate", customer.lastUpdateDate);
		document.append("postalCode", customer.postalCode);
		document.append("creationDate", customer.creationDate);
		document.append("birthDate", customer.birthDate);
		document.append("skillChildhood", customer.skillChildhood);
		document.append("skillCompagny", customer.skillCompagny);
		document.append("skillShopping", customer.skillShopping);
		document.append("firstName", customer.firstName);
		document.append("nationality", customer.nationality);
		document.append("phone", customer.phone);
		document.append("skillAdministrative", customer.skillAdministrative);
		document.append("skillHousework", customer.skillHousework);
		document.append("skillDoityourself", customer.skillDoityourself);
		document.append("id", customer.id);
		document.append("serviceId", customer.serviceId);
		document.append("email", customer.email);
		document.append("longitude", customer.longitude);
		return document;
	}

}
