import { Dispatcher, StoreRegistry } from 'ap-flux'
import AuthHelper from 'helpers/AuthHelper'

/* This class was auto-generated by the JavaScriptWriter */
/* DO NOT MODIFY THIS FILE IT WILL BE REGENERATED IN THE FUTURE */
class InterventionHelper {

	register(id, obj, callback) {
		StoreRegistry.register('REST_STORE/intervention' + (id ? '/' + id : ''), obj, callback);
	}

	unregister(obj) {
		StoreRegistry.unregister('REST_STORE', obj);
	}

	getAuxiliaryInterventions(auxiliaryId) {
		return Dispatcher.issue('GET_AUXILIARY_INTERVENTIONS', {token: AuthHelper.getToken(), auxiliaryId: auxiliaryId});
	}

	getCustomerInterventions(customerId) {
		return Dispatcher.issue('GET_CUSTOMER_INTERVENTIONS', {token: AuthHelper.getToken(), customerId: customerId});
	}

	postIntervention(data) {
		return Dispatcher.issue('POST_INTERVENTION', {token: AuthHelper.getToken(), data: data});
	}

	getIntervention(id) {
		return Dispatcher.issue('GET_INTERVENTION', {token: AuthHelper.getToken(), id: id});
	}

	getInterventionMatch(id) {
		return Dispatcher.issue('GET_INTERVENTION_MATCH', {token: AuthHelper.getToken(), id: id});
	}

	putIntervention(data) {
		return Dispatcher.issue('PUT_INTERVENTION', {token: AuthHelper.getToken(), id: data.id, data: data});
	}

	deleteIntervention(id) {
		return Dispatcher.issue('DELETE_INTERVENTION', {token: AuthHelper.getToken(), id: id});
	}

	putInterventionCancel(data) {
		return Dispatcher.issue('PUT_INTERVENTION_CANCEL', {token: AuthHelper.getToken(), id: data.id, data: data});
	}

	getServiceInterventions(serviceId) {
		return Dispatcher.issue('GET_SERVICE_INTERVENTIONS', {token: AuthHelper.getToken(), serviceId: serviceId});
	}

	getData(id) {
		return StoreRegistry.getStore('REST_STORE').getData('/intervention' + (id ? '/' + id : ''));
	}

}
var InterventionObj = new InterventionHelper()
export default InterventionObj
