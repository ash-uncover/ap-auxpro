import validators from 'utils/validators'
import Civility from 'utils/constants/Civility'
import PeopleCategory from 'utils/constants/PeopleCategory'

/* This class was auto-generated by the JavaScriptWriter */
/* DO NOT MODIFY THIS FILE IT WILL BE REGENERATED IN THE FUTURE */
class CustomerFields {

  static get LAST_NAME() {
    return _LAST_NAME
  }

  static get COUNTRY() {
    return _COUNTRY
  }

  static get CIVILITY() {
    return _CIVILITY
  }

  static get ADDRESS() {
    return _ADDRESS
  }

  static get CITY() {
    return _CITY
  }

  static get LATTITUDE() {
    return _LATTITUDE
  }

  static get LAST_UPDATE_DATE() {
    return _LAST_UPDATE_DATE
  }

  static get POSTAL_CODE() {
    return _POSTAL_CODE
  }

  static get CREATION_DATE() {
    return _CREATION_DATE
  }

  static get BIRTH_DATE() {
    return _BIRTH_DATE
  }

  static get FIRST_NAME() {
    return _FIRST_NAME
  }

  static get NATIONALITY() {
    return _NATIONALITY
  }

  static get PHONE() {
    return _PHONE
  }

  static get ID() {
    return _ID
  }

  static get SERVICE_ID() {
    return _SERVICE_ID
  }

  static get CATEGORY() {
    return _CATEGORY
  }

  static get EMAIL() {
    return _EMAIL
  }

  static get LONGITUDE() {
    return _LONGITUDE
  }

  static get VALUES() {
    return [
    	_LAST_NAME,
    	_COUNTRY,
    	_CIVILITY,
    	_ADDRESS,
    	_CITY,
    	_LATTITUDE,
    	_LAST_UPDATE_DATE,
    	_POSTAL_CODE,
    	_CREATION_DATE,
    	_BIRTH_DATE,
    	_FIRST_NAME,
    	_NATIONALITY,
    	_PHONE,
    	_ID,
    	_SERVICE_ID,
    	_CATEGORY,
    	_EMAIL,
    	_LONGITUDE,
    ]
  }

  static get(id) {
    for (let i = 0 ; i < CustomerFields.VALUES.length ; i++) {
    	if (CustomerFields.VALUES[i].key === id) {
    		return CustomerFields.VALUES[i]
    	}
    }
  }

}
let _LAST_NAME = {
	key: 'lastName',
	type: 'string',
	validator: validators.NON_EMPTY_STRING,
}
let _COUNTRY = {
	key: 'country',
	type: 'string',
	validator: validators.NON_EMPTY_STRING,
}
let _CIVILITY = {
	key: 'civility',
	type: 'string',
	values: Civility.VALUES,
	validator: validators.NON_NULL,
}
let _ADDRESS = {
	key: 'address',
	type: 'string',
	validator: validators.NON_EMPTY_STRING,
}
let _CITY = {
	key: 'city',
	type: 'string',
	validator: validators.NON_EMPTY_STRING,
}
let _LATTITUDE = {
	key: 'lattitude',
	type: 'number',
	validator: validators.DEFAULT,
}
let _LAST_UPDATE_DATE = {
	key: 'lastUpdateDate',
	type: 'Date',
	validator: validators.DEFAULT,
}
let _POSTAL_CODE = {
	key: 'postalCode',
	type: 'string',
	validator: validators.POSTAL_CODE,
}
let _CREATION_DATE = {
	key: 'creationDate',
	type: 'Date',
	validator: validators.DEFAULT,
}
let _BIRTH_DATE = {
	key: 'birthDate',
	type: 'Date',
	validator: validators.BEFORE_TODAY,
}
let _FIRST_NAME = {
	key: 'firstName',
	type: 'string',
	validator: validators.NON_EMPTY_STRING,
}
let _NATIONALITY = {
	key: 'nationality',
	type: 'string',
	validator: validators.NON_NULL,
}
let _PHONE = {
	key: 'phone',
	type: 'string',
	validator: validators.PHONE,
}
let _ID = {
	key: 'id',
	type: 'string',
	validator: validators.DEFAULT,
}
let _SERVICE_ID = {
	key: 'serviceId',
	type: 'string',
	validator: validators.DEFAULT,
}
let _CATEGORY = {
	key: 'category',
	type: 'string',
	values: PeopleCategory.VALUES,
	validator: validators.NON_NULL,
}
let _EMAIL = {
	key: 'email',
	type: 'string',
	validator: validators.DEFAULT,
}
let _LONGITUDE = {
	key: 'longitude',
	type: 'number',
	validator: validators.DEFAULT,
}
export default CustomerFields
